# 情况1: 纯静态网页爬纯文本
# 特点
# requests构造请求得到响应
import requests
url = 'https://news.163.com'
html_content = requests.get(url).text
print(html_content)
# 响应结果跟Chrome开发者工具看到的源代码一致.

# 示例网站
# 糗事百科爬作者和笑话
# 我们平时看到的网页约一大半都是这种情况,纯静态网页这种情况非常普遍.
# (了解)什么是纯静态网页
# 1.刚开始网站简单,只显示信息,只有html
# 2.后来网站发展出交互,有数据库,有注册登录,表单.这时的网站可以动态交互和展示内容,叫动态网站.
# 3.动态网站实现技术第一种:各种语言的web框架,带有数据交互,可以称之为动态网站开发.**但需要注意本质上还是返回的静态页面**,浏览器请求--django路由--视图函数--数据库查询,变量写入html模板--返回整个html(实质上是静态)--浏览器看到所有信息.
# 4.动态网站实现技术第二种:通过js.
# <html>
# <body>
# ...
# <script>
# document.onload(
#     function(){
#         //监听用户点击按钮
#         //发请求
#         //获取数据
#         //修改网页节点,将接受到的信息填入
#     }
# )
# </script>
# </body>
# </html>
# requests包请求js实现动态网站时,会发现resp.text()要比浏览器中看到的源代码短,看不到要爬取的数据.html解析很复杂,requests包只负责第一次请求,它并不负责也不知道js代码怎么执行.这种情况后面介绍.

# 例外
# 1.请求'https://www.baidu.com'时代码少.请求http://www.baidu.com正常.
# 原因目前正处于http向https过渡阶段,一些网站在服务器上只部署一份,https请求都会被重定向为http请求.
# 需分析请求后的网页源代码.


# 场景: 糗事百科爬作者和笑话
